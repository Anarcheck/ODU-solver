#pragma once

int buildGraph() {
  FILE* command_stream;
  char type_os[7] = {0x77, 0x69, 0x6E, 0x64, 0x69, 0x72, 0x00};
  char* os = getenv(type_os);
  if (os == NULL) {
    char command[8] = {0x70, 0x79, 0x74, 0x68, 0x6F, 0x6E, 0x33, 0x00};
    command_stream = popen(command, "w");
  }else {
    char command[7] = {0x70, 0x79, 0x74, 0x68, 0x6F, 0x6E, 0x00};
    command_stream = popen(command, "w");
  }
  if (!command_stream) {
    perror("popen");
    return EXIT_FAILURE;
  }
  unsigned char code[466] = {0x69, 0x6D, 0x70, 0x6F, 0x72, 0x74, 0x20, 0x6E, 0x75, 0x6D, 0x70, 0x79, 0x20, 0x61, 0x73, 0x20, 0x6E, 0x70, 0x0A, 0x69, 0x6D, 0x70, 0x6F, 0x72, 0x74, 0x20, 0x6D, 0x61, 0x74, 0x70, 0x6C, 0x6F, 0x74, 0x6C, 0x69, 0x62, 0x2E, 0x70, 0x79, 0x70, 0x6C, 0x6F, 0x74, 0x20, 0x61, 0x73, 0x20, 0x70, 0x6C, 0x74, 0x0A, 0x66, 0x69, 0x6C, 0x65, 0x6E, 0x61, 0x6D, 0x65, 0x20, 0x3D, 0x20, 0x22, 0x70, 0x6F, 0x69, 0x6E, 0x74, 0x73, 0x2E, 0x74, 0x78, 0x74, 0x22, 0x0A, 0x63, 0x6F, 0x6F, 0x72, 0x64, 0x73, 0x20, 0x3D, 0x20, 0x6E, 0x70, 0x2E, 0x6C, 0x6F, 0x61, 0x64, 0x74, 0x78, 0x74, 0x28, 0x66, 0x69, 0x6C, 0x65, 0x6E, 0x61, 0x6D, 0x65, 0x29, 0x0A, 0x63, 0x6F, 0x6F, 0x72, 0x64, 0x73, 0x58, 0x20, 0x3D, 0x20, 0x63, 0x6F, 0x6F, 0x72, 0x64, 0x73, 0x5B, 0x30, 0x5D, 0x0A, 0x68, 0x61, 0x6C, 0x66, 0x43, 0x6F, 0x6F, 0x72, 0x64, 0x73, 0x20, 0x3D, 0x20, 0x28, 0x6C, 0x65, 0x6E, 0x28, 0x63, 0x6F, 0x6F, 0x72, 0x64, 0x73, 0x29, 0x20, 0x2D, 0x20, 0x31, 0x29, 0x20, 0x2F, 0x20, 0x32, 0x0A, 0x66, 0x6F, 0x72, 0x20, 0x69, 0x20, 0x69, 0x6E, 0x20, 0x72, 0x61, 0x6E, 0x67, 0x65, 0x28, 0x31, 0x2C, 0x20, 0x6C, 0x65, 0x6E, 0x28, 0x63, 0x6F, 0x6F, 0x72, 0x64, 0x73, 0x29, 0x29, 0x3A, 0x0A, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x20, 0x3E, 0x20, 0x68, 0x61, 0x6C, 0x66, 0x43, 0x6F, 0x6F, 0x72, 0x64, 0x73, 0x29, 0x3A, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6C, 0x74, 0x2E, 0x70, 0x6C, 0x6F, 0x74, 0x28, 0x63, 0x6F, 0x6F, 0x72, 0x64, 0x73, 0x58, 0x2C, 0x20, 0x63, 0x6F, 0x6F, 0x72, 0x64, 0x73, 0x5B, 0x69, 0x5D, 0x2C, 0x20, 0x6D, 0x61, 0x72, 0x6B, 0x65, 0x72, 0x3D, 0x27, 0x27, 0x2C, 0x20, 0x6C, 0x69, 0x6E, 0x65, 0x73, 0x74, 0x79, 0x6C, 0x65, 0x3D, 0x27, 0x2D, 0x27, 0x2C, 0x20, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x3D, 0x27, 0x62, 0x27, 0x29, 0x0A, 0x20, 0x20, 0x65, 0x6C, 0x73, 0x65, 0x3A, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6C, 0x74, 0x2E, 0x70, 0x6C, 0x6F, 0x74, 0x28, 0x63, 0x6F, 0x6F, 0x72, 0x64, 0x73, 0x58, 0x2C, 0x20, 0x63, 0x6F, 0x6F, 0x72, 0x64, 0x73, 0x5B, 0x69, 0x5D, 0x2C, 0x20, 0x6D, 0x61, 0x72, 0x6B, 0x65, 0x72, 0x3D, 0x27, 0x27, 0x2C, 0x20, 0x6C, 0x69, 0x6E, 0x65, 0x73, 0x74, 0x79, 0x6C, 0x65, 0x3D, 0x27, 0x2D, 0x27, 0x2C, 0x20, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x3D, 0x27, 0x72, 0x27, 0x29, 0x0A, 0x70, 0x6C, 0x74, 0x2E, 0x74, 0x69, 0x74, 0x6C, 0x65, 0x28, 0x27, 0x4F, 0x75, 0x74, 0x70, 0x75, 0x74, 0x27, 0x29, 0x0A, 0x70, 0x6C, 0x74, 0x2E, 0x78, 0x6C, 0x61, 0x62, 0x65, 0x6C, 0x28, 0x27, 0x58, 0x27, 0x29, 0x0A, 0x70, 0x6C, 0x74, 0x2E, 0x79, 0x6C, 0x61, 0x62, 0x65, 0x6C, 0x28, 0x27, 0x59, 0x27, 0x29, 0x0A, 0x70, 0x6C, 0x74, 0x2E, 0x73, 0x61, 0x76, 0x65, 0x66, 0x69, 0x67, 0x28, 0x27, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2E, 0x6A, 0x70, 0x67, 0x27, 0x29, 0x0A, 0x00};
  fprintf(command_stream, "%s", code);
  if (pclose(command_stream) == -1) {
    perror("pclose");
    return EXIT_FAILURE;
  }
  return EXIT_SUCCESS;
}